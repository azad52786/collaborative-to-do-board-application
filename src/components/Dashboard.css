.dashboard {
  min-height: 100vh;
  height: 100vh; /* Fixed height to prevent overflow */
  display: flex;
  flex-direction: column;
  background: linear-gradient(135deg, var(--primary-bg) 0%, var(--secondary-bg) 100%);
  overflow: hidden; /* Prevent page scrolling */
}

.dashboard-header {
  background: rgba(22, 33, 62, 0.8);
  backdrop-filter: blur(10px);
  border-bottom: 1px solid var(--border);
  padding: var(--space-lg) var(--space-xl);
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: sticky;
  top: 0;
  z-index: 100;
}

.header-left {
  display: flex;
  align-items: center;
  gap: var(--space-xl);
}

.app-title {
  font-size: 1.75rem;
  font-weight: 700;
  background: linear-gradient(135deg, var(--text-primary), var(--accent-purple));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  margin: 0;
}

.connection-status {
  display: flex;
  align-items: center;
  gap: var(--space-sm);
}

.status-indicator {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  transition: all var(--transition-normal);
}

.status-indicator.connected {
  background: var(--success);
  box-shadow: 0 0 8px rgba(0, 212, 170, 0.6);
}

.status-indicator.disconnected {
  background: var(--error);
  box-shadow: 0 0 8px rgba(255, 107, 107, 0.6);
}

.header-right {
  display: flex;
  align-items: center;
  gap: var(--space-lg);
}

.header-actions {
  display: flex;
  gap: var(--space-sm);
}

.action-btn {
  background: none;
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  padding: var(--space-sm);
  color: var(--text-muted);
  cursor: pointer;
  transition: all var(--transition-normal);
}

.action-btn:hover {
  background: var(--card-bg);
  color: var(--text-secondary);
  border-color: var(--accent-blue);
}

.user-menu {
  display: flex;
  align-items: center;
  gap: var(--space-md);
  padding: var(--space-sm) var(--space-lg);
  background: var(--card-bg);
  border: 1px solid var(--border);
  border-radius: var(--radius-lg);
}

.user-avatar {
  width: 36px;
  height: 36px;
  border-radius: 50%;
  background: linear-gradient(135deg, var(--accent-blue), var(--accent-purple));
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.875rem;
  font-weight: 600;
  color: white;
}

.user-name {
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--text-secondary);
}

.dashboard-content {
  flex: 1;
  display: flex;
  gap: var(--space-xl);
  padding: var(--space-xl);
  min-height: 0; /* Allow flex shrinking */
  overflow: hidden;
}

.kanban-container {
  flex: 1;
  overflow-x: auto;
  overflow-y: hidden;
  min-height: 0; /* Allow flex shrinking */
}

.kanban-board {
  display: flex;
  gap: var(--space-lg);
  min-width: 900px;
  height: calc(100vh - 180px);
  min-height: 600px; /* Minimum height for usability */
}

.kanban-column {
  flex: 1;
  min-width: 280px;
  background: rgba(22, 33, 62, 0.6);
  border: 1px solid var(--border);
  border-radius: var(--radius-lg);
  backdrop-filter: blur(10px);
  display: flex;
  flex-direction: column;
}

.column-header {
  padding: var(--space-lg);
  border-bottom: 1px solid var(--border);
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
}

.column-header::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: currentColor;
  border-radius: var(--radius-lg) var(--radius-lg) 0 0;
}

.column-header h3 {
  margin: 0;
  font-size: 1.125rem;
  font-weight: 600;
  color: var(--text-secondary);
}

.task-count {
  background: var(--accent-blue);
  color: white;
  padding: var(--space-xs) var(--space-sm);
  border-radius: var(--radius-sm);
  font-size: 0.75rem;
  font-weight: 600;
}

.column-content {
  flex: 1;
  padding: var(--space-lg);
  overflow-y: auto;
  overflow-x: hidden;
  min-height: 200px;
  max-height: calc(100vh - 300px); /* Prevent columns from growing too tall */
  /* Smooth scrollbar styling */
  scrollbar-width: thin;
  scrollbar-color: var(--accent-blue) transparent;
  /* Remove transition during drag to prevent conflicts */
  transition: background-color 0.2s ease, border-color 0.2s ease;
}

/* Custom scrollbar for WebKit browsers */
.column-content::-webkit-scrollbar {
  width: 6px;
}

.column-content::-webkit-scrollbar-track {
  background: transparent;
}

.column-content::-webkit-scrollbar-thumb {
  background: var(--accent-blue);
  border-radius: 3px;
}

.column-content::-webkit-scrollbar-thumb:hover {
  background: var(--accent-purple);
}

.column-content.drag-over {
  background: rgba(15, 52, 96, 0.1);
  border: 2px dashed var(--accent-blue);
  border-radius: var(--radius-md);
  margin: var(--space-sm);
}

/* Drag and Drop Specific Styles for @dnd-kit */
.dragging {
  opacity: 0.5 !important;
  transform: rotate(2deg) !important;
  box-shadow: 0 10px 30px rgba(15, 52, 96, 0.6) !important;
  z-index: 1000 !important;
  background: var(--card-bg) !important;
  border: 2px solid var(--accent-blue) !important;
}

/* Remove any conflicting transforms */
.kanban-column [data-dnd-kit-draggable] {
  transition: transform 0.2s ease;
}

/* Improve column drop zones */
.column-content {
  transition: background-color 0.2s ease, border-color 0.2s ease;
}

.column-content.drag-over {
  background: rgba(15, 52, 96, 0.15) !important;
  border: 2px dashed var(--accent-blue) !important;
  border-radius: var(--radius-md) !important;
  margin: var(--space-sm) !important;
}

/* Drag placeholder styling */
[data-dnd-kit-draggable] {
  outline: none !important;
  border: none !important;
  cursor: grab;
}

[data-dnd-kit-draggable]:focus {
  box-shadow: none !important;
  outline: none !important;
}

[data-dnd-kit-draggable]:active {
  cursor: grabbing;
}

/* Drag placeholder styling */
[data-react-beautiful-dnd-drag-handle] {
  outline: none !important;
  border: none !important;
}

/* Improve drag mirror styling */
[data-react-beautiful-dnd-dragging] {
  background: var(--card-bg) !important;
  border: 2px solid var(--accent-blue) !important;
  border-radius: var(--radius-lg) !important;
  box-shadow: 0 15px 35px rgba(15, 52, 96, 0.5) !important;
}

/* Placeholder styling */
[data-react-beautiful-dnd-drag-handle]:focus {
  box-shadow: none !important;
  outline: none !important;
}

.activity-sidebar {
  width: 320px;
  min-width: 320px; /* Prevent shrinking */
  background: rgba(22, 33, 62, 0.6);
  border: 1px solid var(--border);
  border-radius: var(--radius-lg);
  backdrop-filter: blur(10px);
  display: flex;
  flex-direction: column;
  max-height: calc(100vh - 180px);
  min-height: 0; /* Allow flex shrinking */
}

.sidebar-header {
  padding: var(--space-lg);
  border-bottom: 1px solid var(--border);
  display: flex;
  align-items: center;
  gap: var(--space-md);
}

.sidebar-header h3 {
  margin: 0;
  font-size: 1.125rem;
  font-weight: 600;
  color: var(--text-secondary);
}

/* Toast Container */
.toast-container {
  position: fixed;
  top: 80px;
  right: var(--space-xl);
  z-index: 1000;
  display: flex;
  flex-direction: column;
  gap: var(--space-sm);
}

/* Empty column placeholder */
.empty-column-placeholder {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 200px;
  border: 2px dashed rgba(255, 255, 255, 0.2);
  border-radius: var(--radius-md);
  margin: var(--space-md);
  background: rgba(255, 255, 255, 0.03);
  transition: all var(--transition-normal);
}

.empty-column-placeholder p {
  color: var(--text-muted);
  font-size: 0.9rem;
  margin: 0;
}

.column-content.drag-over .empty-column-placeholder {
  border-color: var(--accent-blue);
  background: rgba(15, 52, 96, 0.15);
}

/* Enhanced drag-over glow effect */
.column-content.drag-over {
  background: rgba(15, 52, 96, 0.1) !important;
  border: 3px dashed var(--accent-blue) !important;
  border-radius: var(--radius-md) !important;
  transform: scale(1.02);
  box-shadow: 
    0 4px 20px rgba(15, 52, 96, 0.3),
    inset 0 0 30px rgba(15, 52, 96, 0.1),
    0 0 20px rgba(15, 52, 96, 0.5);
  animation: dropZonePulse 1s ease-in-out infinite alternate;
  position: relative;
  overflow: visible;
}

.column-content.drag-over::before {
  content: '';
  position: absolute;
  top: -3px;
  left: -3px;
  right: -3px;
  bottom: -3px;
  background: linear-gradient(45deg, var(--accent-blue), var(--accent-purple));
  border-radius: var(--radius-md);
  opacity: 0.4;
  z-index: -1;
  animation: borderGlow 1.5s ease-in-out infinite alternate;
}

@keyframes borderGlow {
  0% { opacity: 0.2; }
  100% { opacity: 0.6; }
}

/* Particle effects for successful moves */
@keyframes sparkle {
  0% {
    opacity: 0;
    transform: scale(0) rotate(0deg);
  }
  50% {
    opacity: 1;
    transform: scale(1) rotate(180deg);
  }
  100% {
    opacity: 0;
    transform: scale(0) rotate(360deg);
  }
}

.move-particles {
  position: absolute;
  pointer-events: none;
  z-index: 1001;
}

.particle {
  position: absolute;
  width: 4px;
  height: 4px;
  background: var(--accent-blue);
  border-radius: 50%;
  animation: sparkle 1s ease-out forwards;
}

.particle:nth-child(1) { 
  animation-delay: 0s; 
  background: var(--accent-blue);
}
.particle:nth-child(2) { 
  animation-delay: 0.1s; 
  background: var(--accent-purple);
}
.particle:nth-child(3) { 
  animation-delay: 0.2s; 
  background: var(--accent-green);
}
.particle:nth-child(4) { 
  animation-delay: 0.3s; 
  background: var(--accent-blue);
}
.particle:nth-child(5) { 
  animation-delay: 0.4s; 
  background: var(--accent-purple);
}

/* Drag Overlay Improvements */
.drag-overlay {
  pointer-events: none;
  z-index: 999;
  transform: rotate(5deg);
  opacity: 0.9;
}

.drag-overlay .task-card {
  box-shadow: 0 20px 40px rgba(15, 52, 96, 0.4);
  border: 2px solid var(--accent-blue);
  background: var(--card-bg);
}

/* Ensure scrolling works during drag operations */
[data-dnd-kit-drag-overlay] {
  pointer-events: none;
}

/* Improve scroll performance during drag */
.kanban-container.dragging {
  scroll-behavior: auto; /* Disable smooth scrolling during drag */
}

.column-content.dragging {
  scroll-behavior: auto;
}

/* Reset scroll behavior after drag */
.kanban-container, .column-content {
  scroll-behavior: smooth;
}

/* Responsive Design for Better Scrolling */
@media (max-width: 1200px) {
  .dashboard-content {
    flex-direction: column;
    gap: var(--space-lg);
  }
  
  .activity-sidebar {
    width: 100%;
    min-width: unset;
    max-height: 300px;
  }
  
  .kanban-board {
    height: calc(100vh - 400px);
    min-height: 500px;
  }
}

@media (max-width: 768px) {
  .dashboard-content {
    padding: var(--space-md);
  }
  
  .kanban-container {
    overflow-x: auto;
    overflow-y: hidden;
  }
  
  .kanban-board {
    min-width: 800px; /* Maintain horizontal scrolling on mobile */
    height: calc(100vh - 250px);
    min-height: 400px;
  }
  
  .kanban-column {
    min-width: 250px; /* Slightly smaller on mobile */
  }
  
  .column-content {
    max-height: calc(100vh - 350px);
    padding: var(--space-md);
  }
  
  .activity-sidebar {
    max-height: 250px;
  }
}

@media (max-width: 480px) {
  .dashboard-header {
    padding: var(--space-md);
    flex-wrap: wrap;
    gap: var(--space-md);
  }
  
  .header-left, .header-right {
    flex: 1;
    min-width: 0;
  }
  
  .dashboard-content {
    padding: var(--space-sm);
  }
  
  .kanban-column {
    min-width: 220px;
  }
  
  .column-content {
    padding: var(--space-sm);
    max-height: calc(100vh - 380px);
  }
}

/* Loading state */
.loading-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  color: var(--text-secondary);
}

.loading-spinner {
  width: 40px;
  height: 40px;
  border: 3px solid rgba(255, 255, 255, 0.1);
  border-top: 3px solid var(--accent-blue);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: var(--space-lg);
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.loading-container p {
  font-size: 1.1rem;
  color: var(--text-muted);
}

/* Empty State Styles */
.empty-state {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 60vh;
  padding: var(--space-xxl);
}

.empty-state-content {
  text-align: center;
  max-width: 500px;
  background: rgba(22, 33, 62, 0.6);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: var(--radius-xl);
  padding: var(--space-xxl);
  box-shadow: 0 20px 40px rgba(15, 52, 96, 0.3);
}

.empty-state-icon {
  width: 80px;
  height: 80px;
  margin: 0 auto var(--space-lg);
  background: linear-gradient(135deg, var(--accent-blue), var(--accent-purple));
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--text-secondary);
  box-shadow: 0 10px 30px rgba(15, 52, 96, 0.4);
}

.empty-state h2 {
  font-size: 1.75rem;
  font-weight: 600;
  color: var(--text-secondary);
  margin-bottom: var(--space-md);
}

.empty-state p {
  font-size: 1rem;
  line-height: 1.6;
  color: var(--text-muted);
  margin-bottom: var(--space-xl);
}

.btn-large {
  padding: var(--space-md) var(--space-xl);
  font-size: 1rem;
  font-weight: 600;
  gap: var(--space-sm);
}

/* =============================================
   DRAG AND DROP ANIMATIONS
   Beautiful moving effects for task cards
   ============================================= */

/* Column states during drag operations */
.kanban-column.sending {
  position: relative;
  transform: scale(0.98);
  opacity: 0.8;
  transition: all 0.3s ease;
}

.kanban-column.sending::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(233, 69, 96, 0.1), rgba(83, 52, 131, 0.1));
  border: 2px dashed var(--text-primary);
  border-radius: var(--radius-lg);
  pointer-events: none;
  z-index: 1;
}

.kanban-column.receiving {
  position: relative;
  transform: scale(1.02);
  transition: all 0.3s ease;
}

.kanban-column.receiving::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(0, 212, 170, 0.1), rgba(15, 52, 96, 0.1));
  border: 2px solid var(--success);
  border-radius: var(--radius-lg);
  pointer-events: none;
  z-index: 1;
  animation: pulse-glow 2s infinite;
}

@keyframes pulse-glow {
  0%, 100% {
    box-shadow: 0 0 20px rgba(0, 212, 170, 0.3);
  }
  50% {
    box-shadow: 0 0 30px rgba(0, 212, 170, 0.6);
  }
}

/* Moving task visual effects */
.task-card.moving {
  opacity: 0.7;
  transform: scale(0.95);
  transition: all 0.3s ease;
  position: relative;
  z-index: 10;
}

.task-card.moving::after {
  content: '';
  position: absolute;
  top: -5px;
  left: -5px;
  right: -5px;
  bottom: -5px;
  background: linear-gradient(135deg, var(--text-primary), var(--accent-purple));
  border-radius: var(--radius-md);
  z-index: -1;
  opacity: 0.5;
  animation: moving-glow 1.5s infinite;
}

@keyframes moving-glow {
  0%, 100% {
    transform: scale(1);
    opacity: 0.3;
  }
  50% {
    transform: scale(1.05);
    opacity: 0.7;
  }
}

/* Drag overlay enhancements */
.drag-overlay {
  transform: rotate(5deg) scale(1.05);
  filter: drop-shadow(0 15px 35px rgba(15, 52, 96, 0.4));
  transition: none;
  position: relative;
  z-index: 1000;
}

.drag-overlay .task-card {
  border: 2px solid var(--text-primary);
  background: rgba(22, 33, 62, 0.95);
  backdrop-filter: blur(20px);
  animation: float-drag 2s infinite ease-in-out;
}

@keyframes float-drag {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

/* Source and target indicators */
.source-indicator {
  position: absolute;
  top: -10px;
  right: -10px;
  width: 20px;
  height: 20px;
  background: linear-gradient(135deg, var(--text-primary), var(--accent-purple));
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.75rem;
  color: white;
  font-weight: bold;
  box-shadow: 0 4px 15px rgba(233, 69, 96, 0.4);
  animation: bounce-indicator 1s infinite;
}

.target-indicator {
  position: absolute;
  top: -10px;
  right: -10px;
  width: 20px;
  height: 20px;
  background: linear-gradient(135deg, var(--success), var(--accent-blue));
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.75rem;
  color: white;
  font-weight: bold;
  box-shadow: 0 4px 15px rgba(0, 212, 170, 0.4);
  animation: pulse-indicator 1.5s infinite;
}

@keyframes bounce-indicator {
  0%, 100% {
    transform: translateY(0px) scale(1);
  }
  50% {
    transform: translateY(-5px) scale(1.1);
  }
}

@keyframes pulse-indicator {
  0%, 100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.8;
  }
}

/* Task count animation */
.task-count.updated {
  animation: count-update 0.6s ease;
  background: var(--success);
}

@keyframes count-update {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.2);
    background: var(--text-primary);
  }
  100% {
    transform: scale(1);
  }
}

/* Path visualization effect */
.drag-path-line {
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  height: 2px;
  background: linear-gradient(
    90deg,
    transparent,
    var(--text-primary),
    var(--accent-purple),
    transparent
  );
  z-index: 5;
  animation: path-flow 2s infinite;
  pointer-events: none;
}

@keyframes path-flow {
  0% {
    opacity: 0;
    transform: scaleX(0);
  }
  50% {
    opacity: 1;
    transform: scaleX(1);
  }
  100% {
    opacity: 0;
    transform: scaleX(0);
  }
}

/* Enhanced hover effects for cards during drag */
.kanban-column:not(.receiving) .task-card:hover {
  transform: translateY(-3px) scale(1.02);
  box-shadow: 0 8px 25px rgba(15, 52, 96, 0.3);
  transition: all 0.3s ease;
}

/* Smooth transitions for all drag interactions */
.task-card {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.kanban-column {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Sortable wrapper moving state */
.sortable-task-wrapper.moving {
  animation: task-moving 0.5s ease;
}

@keyframes task-moving {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
    filter: brightness(1.2);
  }
  100% {
    transform: scale(1);
  }
}

.sortable-ghost {
  opacity: 0.4 !important;
  transform: rotate(5deg) scale(1.05) !important;
  filter: brightness(1.3);
}

/* Enhanced Drag and Drop Effects */
.task-card.dragging {
  opacity: 0.3 !important;
  transform: scale(0.95) !important;
  filter: grayscale(50%);
  transition: all 0.2s ease !important;
}

.task-card.drag-preview {
  transform: rotate(5deg) scale(1.05);
  box-shadow: 0 25px 50px rgba(15, 52, 96, 0.3), 
              0 0 30px rgba(83, 52, 131, 0.2);
  border: 2px solid var(--accent-blue);
  z-index: 1000;
  opacity: 0.95;
}

/* Smooth Travel Animation */
.task-card.traveling {
  animation: smoothTravel 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
  z-index: 100;
  pointer-events: none;
}

@keyframes smoothTravel {
  0% {
    transform: scale(1) rotate(0deg);
    opacity: 1;
  }
  25% {
    transform: scale(1.1) rotate(2deg);
    opacity: 0.8;
  }
  50% {
    transform: scale(1.15) rotate(0deg);
    opacity: 0.6;
  }
  75% {
    transform: scale(1.1) rotate(-2deg);
    opacity: 0.8;
  }
  100% {
    transform: scale(1) rotate(0deg);
    opacity: 1;
  }
}

/* Column Highlight Effects */
.droppable-column.drag-over {
  background: linear-gradient(135deg, 
    rgba(15, 52, 96, 0.1) 0%, 
    rgba(83, 52, 131, 0.1) 100%);
  transform: scale(1.02);
  box-shadow: 0 0 30px rgba(15, 52, 96, 0.3);
}

.droppable-column.drag-source {
  opacity: 0.7;
  transform: scale(0.98);
}

.droppable-column.drag-target {
  background: linear-gradient(135deg, 
    rgba(0, 212, 170, 0.1) 0%, 
    rgba(15, 52, 96, 0.1) 100%);
  border: 2px dashed var(--success);
  animation: pulseGlow 2s infinite;
}

@keyframes pulseGlow {
  0%, 100% {
    box-shadow: 0 0 20px rgba(0, 212, 170, 0.3);
  }
  50% {
    box-shadow: 0 0 40px rgba(0, 212, 170, 0.6);
  }
}

/* Magic Trail Effect */
.magic-trail {
  position: absolute;
  pointer-events: none;
  z-index: 998;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: linear-gradient(45deg, var(--accent-blue), var(--accent-purple));
  box-shadow: 0 0 10px currentColor;
  animation: trailFade 1s ease-out forwards;
}

@keyframes trailFade {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  100% {
    transform: scale(0);
    opacity: 0;
  }
}

/* Floating Animation for Moving Cards */
.task-card.floating {
  animation: floatMove 2s ease-in-out infinite;
}

@keyframes floatMove {
  0%, 100% {
    transform: translateY(0px) rotate(0deg);
  }
  50% {
    transform: translateY(-5px) rotate(1deg);
  }
}

/* Success Drop Animation */
.task-card.just-dropped {
  animation: successDrop 0.6s ease-out forwards;
}

@keyframes successDrop {
  0% {
    transform: scale(1.2) rotate(5deg);
    box-shadow: 0 0 30px var(--success);
  }
  50% {
    transform: scale(0.95) rotate(-2deg);
  }
  100% {
    transform: scale(1) rotate(0deg);
    box-shadow: none;
  }
}

/* Magical Drag Preview Effects */
.drag-preview-wrapper {
  position: relative;
  filter: drop-shadow(0 15px 35px rgba(15, 52, 96, 0.4));
}

.magic-sparkles {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  overflow: hidden;
}

.sparkle {
  position: absolute;
  width: 8px;
  height: 8px;
  background: linear-gradient(45deg, #FFD700, #FFA500);
  border-radius: 50%;
  animation: sparkleFloat 2s ease-in-out infinite;
  box-shadow: 0 0 10px currentColor;
}

@keyframes sparkleFloat {
  0%, 100% {
    transform: translateY(0px) scale(0.8);
    opacity: 0.7;
  }
  50% {
    transform: translateY(-20px) scale(1.2);
    opacity: 1;
  }
}

.sparkle:nth-child(odd) {
  animation-direction: reverse;
  background: linear-gradient(45deg, #87CEEB, #4169E1);
}

/* Enhanced Drag Overlay */
.drag-overlay {
  cursor: grabbing !important;
  z-index: 1000;
  pointer-events: none;
}

.drag-overlay .task-card {
  border: 3px solid var(--accent-blue);
  background: linear-gradient(135deg, 
    rgba(22, 33, 62, 0.95) 0%, 
    rgba(26, 26, 46, 0.95) 100%);
  backdrop-filter: blur(20px);
  box-shadow: 
    0 25px 50px rgba(15, 52, 96, 0.4),
    0 0 30px rgba(83, 52, 131, 0.3),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);
}

/* Drag Path Visualization */
.drag-path-line {
  position: absolute;
  top: 50%;
  right: -20px;
  width: 40px;
  height: 2px;
  background: linear-gradient(90deg, 
    var(--accent-blue), 
    transparent);
  animation: pathPulse 1s ease-in-out infinite;
  z-index: 10;
}

.drag-path-line::after {
  content: '';
  position: absolute;
  right: -8px;
  top: -3px;
  width: 0;
  height: 0;
  border-left: 8px solid var(--accent-blue);
  border-top: 4px solid transparent;
  border-bottom: 4px solid transparent;
  animation: arrowPulse 1s ease-in-out infinite;
}

@keyframes pathPulse {
  0%, 100% {
    opacity: 0.6;
    transform: scaleX(1);
  }
  50% {
    opacity: 1;
    transform: scaleX(1.2);
  }
}

@keyframes arrowPulse {
  0%, 100% {
    opacity: 0.6;
    transform: translateX(0px);
  }
  50% {
    opacity: 1;
    transform: translateX(5px);
  }
}

/* Column State Effects */
.kanban-column.drag-source .column-header {
  background: linear-gradient(135deg, 
    rgba(255, 107, 107, 0.1) 0%, 
    rgba(26, 26, 46, 0.9) 100%);
  border-bottom: 2px solid rgba(255, 107, 107, 0.3);
}

.kanban-column.drag-target .column-header {
  background: linear-gradient(135deg, 
    rgba(0, 212, 170, 0.1) 0%, 
    rgba(26, 26, 46, 0.9) 100%);
  border-bottom: 2px solid var(--success);
  animation: targetGlow 1.5s ease-in-out infinite;
}

@keyframes targetGlow {
  0%, 100% {
    box-shadow: 0 2px 10px rgba(0, 212, 170, 0.3);
  }
  50% {
    box-shadow: 0 2px 20px rgba(0, 212, 170, 0.6);
  }
}

/* Rollback animation when API fails */
.rolling-back {
	animation: rollbackShake 0.6s ease-in-out;
	border: 2px solid var(--error) !important;
	background: rgba(255, 107, 107, 0.1) !important;
}

@keyframes rollbackShake {
	0%, 100% { transform: translateX(0); }
	10%, 30%, 50%, 70%, 90% { transform: translateX(-3px); }
	20%, 40%, 60%, 80% { transform: translateX(3px); }
}

/* Optimistic update success animation */
.optimistic-success {
	animation: optimisticSuccess 0.8s ease-out;
}

@keyframes optimisticSuccess {
	0% { 
		transform: scale(1);
		box-shadow: 0 4px 15px var(--shadow);
	}
	50% { 
		transform: scale(1.02);
		box-shadow: 0 8px 25px var(--success), 0 0 20px rgba(0, 212, 170, 0.3);
	}
	100% { 
		transform: scale(1);
		box-shadow: 0 4px 15px var(--shadow);
	}
}

/* ...existing animations... */